@page "/Registro_frutos"
@page "/Registro_frutos/{FrutosId:int}"

@inject IToastService toast

<PageTitle>Registro</PageTitle>

<EditForm Model="frutos" >

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card">
    
            <div class="card-header">
                <h3> Registro </h3>
            </div>

            <div class="card-body">

                @* FrutosId *@
                <div>
                    <div class="col mb-3">
                        <label> Producto Id </label>
                        <div class="row-5">
                            <InputNumber class="col-control" @bind-Value="frutos.FrutosId" />
                            <ValidationMessage For="@(() => frutos.FrutosId)" />

                            <button type="button" class="btn btn-sm btn-primary" @onclick="Buscar" > <span class="oi oi-magnifying-glass" ></span> </button>
                        </div>
                    </div>
                </div>

                @* Fecha  *@
                <div Class="col mb-3">
                    <label class="row-text"> Fecha </label>
                    <div class="row-5">
                        <input type="date" @bind-value="frutos.Fecha" />
                        <ValidationMessage For="@(() => frutos.Fecha)" />
                    </div>
                </div>

                @* Concepto *@
                <div class="col mb-3">
                    <label> Concepto </label>
                    <div class="row">
                        <InputText class="row-control" @bind-Value="frutos.Concepto" placeholder="Insete aquí lo que esta haciendo" />
                        <ValidationMessage For="@(() => frutos.Concepto)" />
                    </div>
                </div>
                
            </div>

            @* DETALLE *@
            <div class="card align-items-center">

                <div class="card-header">
                    <h3> Utilizados </h3>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col mb-3">
                            <div class="row">
                                
                                <div class="col">
                                    <label> Producto </label>
                                    <div class="row">
                                        <InputSelect class="col-group col-30 lg" @bind-Value="frutosDetalle.DetallesId">
                                            @foreach (var item in productos)
                                            {
                                                <option value="@item.ProductoId">@item.Descripcion</option>
                                            }
                                        </InputSelect>
                                    </div>
                                </div>

                                <div class="col">
                                    <label> Cantidad </label>
                                    <InputNumber class="col-control" @bind-Value="frutosDetalle.Cantidad" />
                                </div>
                                
                                <div class="col g-3">
                                    <button type="button" class="btn btn-sm-4 btn-primary" @onclick="AgregarDetalle"><span class="oi oi-plus"></span> Agregar </button>
                                </div>

                            </div>
                        </div>
                    </div>

                    @* Tabla *@
                    <table class="table table-light table-striped">

                        <thead class="thead">
                            <tr class="table">
                                <th>FrutosId</th>
                                <th>Descripci&oacute;n</th>
                                <th>Cantidad</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in frutos.FrutosDetalles)
                            {
                                <tr>
                                    <td>@item.DetallesId</td>
                                    <td>@item.Producto</td>
                                    <td>@item.Cantidad</td>

                                    <td><span class="btn btn-sm btn-outline-primary oi oi-ban" href="#"  @onclick="@(() => RemoverFila(item))"> Remover</span> </td>
                                </tr>
                            }
                        </tbody>

                    </table>

                    @* Peso total *@
                    <div class="row g-2 mt-3">
                        <label class="col-sm-2" >Peso</label>
                        <InputNumber readonly class="col-control col-2" @bind-Value="PesoTotal" @onchange="PesoChanged" />
                        <ValidationMessage For="@(() => PesoTotal)" />
                    </div>

                </div>
            </div>

            @* Produccion *@
           <div class="card align-items-center">
                
                <div class="card-header">
                    <h3> Producido </h3>
                </div>

                <div class="card-body">
                    <div class="row">

                        @* Productos *@
                        <div class="col mb-3">
                            <label> Producto </label>
                            <div class="row">
                                <InputSelect class="col-group col-30 lg" @bind-Value="Tipo">
                                
                                    <option value="-1">Mixto</option>
                                    @foreach(var item in frutos.FrutosDetalles)
                                    {
                                        <option value="@item.DetallesId">@item.Producto</option>
                                    }

                                </InputSelect>
                            </div>
                        </div>

                        <div class="col" >
                            <label> Cantidad </label>
                            <div class="row-5">
                                <InputNumber class="col-control" @bind-Value="frutos.Cantidad" />
                                <ValidationMessage For="@(() => frutos.Cantidad)" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer">

                @* Botones *@
                <div class="col text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo" > <span class="oi oi-document" ></span> Nuevo </button>
                    <button type="submit" class="btn btn-lg btn-success" @onclick="Guardar" > <span class="oi oi-folder" ></span> Guardar </button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"> <span class="oi oi-x" ></span> Eliminar </button>
                </div>
                
            </div>
                
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int FrutosId { get; set; }

    public int Tipo { get; set; }

    public double Peso { get; set; }

    public double PesoTotal { get; set; }

    public Frutos frutos { get; set; }

    public FrutosDetalle frutosDetalle { get; set; } = new FrutosDetalle();

    public List<Productos> productos { get; set; } = new List<Productos>();

    [Inject]
    public FrutosBLL frutosBLL { get; set; }

    [Inject]
    public ProductosBLL productosBLL { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
        frutos.FrutosId = FrutosId;
        productos = productosBLL.GetList(b => true);
        Buscar();
    }

    private void Buscar()
    {
        if (frutos.FrutosId > 0)
        {
            Frutos? encontrado = frutosBLL?.Buscar(this.frutos.FrutosId);
            if (encontrado != null)
                this.frutos = encontrado;
            else
                toast.ShowError("No se a podido eliminar el producto");
        }
    }

    private void Nuevo()
    {
        this.frutos = new Frutos();
    }

    private void AgregarDetalle()
    {
        var descripcion = productosBLL.Buscar(frutosDetalle.DetallesId);
        frutosDetalle.Producto = descripcion.Descripcion;
        frutosDetalle.Peso = descripcion.Gramos;
        PesoChanged();
        this.frutos.FrutosDetalles.Add(frutosDetalle);
        this.frutosDetalle = new FrutosDetalle();
    }

    private void Guardar()
    {
        bool confirmar = false;
        var descripcion = productosBLL.Buscar(Tipo);
        frutos.ProductoEmpacado = descripcion.Descripcion;
        frutos.Peso = descripcion.Gramos * frutos.Cantidad;
        confirmar = frutosBLL.Guardar(frutos);

        if (confirmar)
        {
            toast.ShowSuccess("Se puedo guardar el producto correctamente");
            Nuevo();
        }
        else
        {
            toast.ShowError("¡¡No se puedo guardar el producto!!");
        }
    }

    private void RemoverFila(FrutosDetalle item)
    {
        this.frutos.FrutosDetalles.Remove(item);
    }

    private void Eliminar()
    {
        bool confirmar;
        confirmar = frutosBLL.Eliminar(frutos.FrutosId);
        if (confirmar)
        {
            toast.ShowSuccess("Se ha eliminado el producto");
            Nuevo();
        }
        else
        {
            toast.ShowError("No fue posible eliminar el producto");
        }
    }

    public void PesoChanged()
    {
        PesoTotal += (frutosDetalle.Peso * frutosDetalle.Cantidad);
    }

    @* public void CostoChanged()
    {
        PrecioOrCostoChanged();
        ExistenciaOrCostoChanged();
    }

    public void GananciaChanged()
    {
        producto.Ganancia = Convert.ToInt32(((producto.Precio - producto.Costo) / producto.Costo) * 100);
    }

    public void ExistenciaOrCostoChanged()
    {
        producto.ValorInventario = producto.Costo * producto.Existencia;
    }

    public void PrecioOrCostoChanged()
    {
        producto.Ganancia = (int)((producto.Precio - producto.Costo) / producto.Costo) * 100;
    } *@
}